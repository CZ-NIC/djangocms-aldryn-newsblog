; Examples of use:

; sudo apt-get install pkg-config python3-dev default-libmysqlclient-dev build-essential

; tox -e py312-sqlite-cms41 -- aldryn_newsblog.tests.test_templatetags.PrependPrefixIfExistsTest.test_dummy_template
; tox -e py312-sqlite-cms41 -- --verbose 2 aldryn_newsblog.tests.test_plugins

; tox -e clear-coverage
; tox -e py312-sqlite-cms41
; tox -e compute-coverage

[tox]
minversion = 4.4.0
envlist =
    quality
    translations
    clear-coverage
    py{310,312}-{sqlite,mysql,postgres}-cms{41,50}
    compute-coverage

skip_missing_interpreters = True

[flake8]
ignore = E251,E128
max-line-length = 119
exclude =
    *.egg-info,
    .eggs,
    .git,
    .settings,
    .tox,
    build,
    data,
    dist,
    docs,
    *migrations*,
    node_modules*,
    requirements,
    tmp

[isort]
line_length = 79
skip = manage.py, migrations, .tox, .eggs, data
include_trailing_comma = true
multi_line_output = 5
not_skip = __init__.py
lines_after_imports = 2
default_section = THIRDPARTY
sections = FUTURE, STDLIB, DJANGO, CMS, THIRDPARTY, FIRSTPARTY, LIB, LOCALFOLDER
known_first_party = aldryn_newsblog
known_cms = cms, menus
known_django = django

[testenv:quality]
depends =
extras = quality
# Do not fail on first error, but run all the checks
ignore_errors = True
commands =
    isort --py 312 --check-only --diff --skip migrations aldryn_newsblog
    flake8 --format=pylint --show-source aldryn_newsblog
    ; pydocstyle aldryn_newsblog
    ; mypy --package aldryn_newsblog
    django-admin makemigrations --no-input --dry-run --check --verbosity 3 aldryn_newsblog

[testenv]
depends = clear-coverage
setenv =
    DJANGO_SETTINGS_MODULE = aldryn_newsblog.tests.settings
passenv =
    CI
    HOME
    COVERALLS_REPO_TOKEN
whitelist_externals =
    gulp
    sh
    sleep
deps =
    -r{toxinidir}/test_requirements.txt
    cms41: django-cms~=4.1
    cms50: django-cms~=5.0
    mysql: mysqlclient  # sudo apt-get install default-libmysqlclient-dev
    postgres: psycopg2
commands =
    {envpython} --version
    coverage run --parallel-mode test_settings.py {posargs}

[testenv:clear-coverage]
depends =
# Use single virtualenv for both coverage envs.
envdir = {toxworkdir}/coverage
commands =
    coverage erase

[testenv:compute-coverage]
depends =
    py{310,312}-{sqlite,mysql,postgres}-cms{41,50}
# Use single virtualenv for both coverage envs.
envdir = {toxworkdir}/coverage
parallel_show_output = true
commands =
    coverage combine
    coverage report
    coverage html

[testenv:flake8]
deps = flake8
commands = flake8

[testenv:isort]
deps = isort
commands = isort -c -rc -df aldryn_newsblog
skip_install = true

[testenv:translations]
depends = quality
deps =
    polint
setenv =
    SKIP_NPM = 1
    DJANGO_SETTINGS_MODULE =
    LANG = en_US.UTF-8
allowlist_externals =
    msgcmp
    rm
# Do not fail on first error, but run all the checks
ignore_errors = True
extras = quality
changedir = {toxinidir}/aldryn_newsblog
commands =
    polint --show-msg locale/cs/LC_MESSAGES/django.po
    django-admin makemessages --locale c --no-obsolete --no-location --keep-pot
    msgcmp locale/cs/LC_MESSAGES/django.po locale/django.pot
    -rm -r locale/django.pot locale/c
